<?xml version="1.0" encoding="utf-8"?>
<mx:Form xmlns:mx="http://www.adobe.com/2006/mxml" width="800" height="600"
	creationComplete="doInit = true; init();" show="init()" hide="doInit = true;">

	<mx:Script>
	<![CDATA[
		import com.origo.client.TripleStore;
		import com.origo.client.StatusReporter;
		import com.origo.client.InputHelper;
		
		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;
		import mx.events.ValidationResultEvent;
		
		import com.hurlant.util.Hex;
		import com.hurlant.crypto.hash.SHA1;
		import com.hurlant.crypto.Crypto;
		import com.hurlant.crypto.hash.IHash;
		
		public var identifier:String;
		public var identityGraph:String;
		public var reporter:StatusReporter;
		public var store:TripleStore;
		
		private var doInit:Boolean;
		
		[Bindable] private var sparql:Namespace = new Namespace("http://www.w3.org/2005/sparql-results#");
		
		public function init():void
		{
			if(doInit) {
				weblogInput.text = "";
				workInfoHomepageInput.text = "";
				workplaceHomepageInput.text = "";
				schoolHomepageInput.text = "";
				planInput.text = "";
				geekcodeInput.text = "";
				genderInput.selectedIndex = 0;
				myersBriggsInput.text = "";
				openIdInput.text = "";
				
				store.addEventListener("result", apiLoadResult);

				reporter.status = "Loading data...";
				store.executeQuery(
					"PREFIX foaf: <http://xmlns.com/foaf/0.1/> " +

					"SELECT ?weblog ?workinfohomepage ?workplacehomepage ?schoolhomepage ?plan ?geekcode ?gender ?myersbriggs ?openid WHERE {" +
						"GRAPH <" + identityGraph + "> {" +
							"<" + identifier + "> rdf:type <http://xmlns.com/foaf/0.1/Person> . " +
							"OPTIONAL { <" + identifier + "> foaf:weblog ?weblog }" +
							"OPTIONAL { <" + identifier + "> foaf:workInfoHomepage ?workinfohomepage }" +
							"OPTIONAL { <" + identifier + "> foaf:workplaceHomepage ?workplacehomepage }" +
							"OPTIONAL { <" + identifier + "> foaf:schoolHomepage ?schoolhomepage }" +
							"OPTIONAL { <" + identifier + "> foaf:plan ?plan }" +
							"OPTIONAL { <" + identifier + "> foaf:geekcode ?geekcode }" +
							"OPTIONAL { <" + identifier + "> foaf:gender ?gender }" +
							"OPTIONAL { <" + identifier + "> foaf:myersBriggs ?myersbriggs }" +
							"OPTIONAL { <" + identifier + "> foaf:openid ?openid }" +
						"}" +
					"}"
				);
			}
		}
		
		private function save():void
		{
			store.addEventListener("result", apiSaveResult);
			
			reporter.status = "Saving data...";
			
			// delete query
			
			var query:String = 
				"PREFIX foaf: <http://xmlns.com/foaf/0.1/> " +

				"DELETE FROM <" + identityGraph + "> {" +
					"<" + identifier + "> foaf:weblog ?weblog ." +
					"<" + identifier + "> foaf:workInfoHomepage ?workinfohomepage ." +
					"<" + identifier + "> foaf:workplaceHomepage ?workplacehomepage ." +
					"<" + identifier + "> foaf:schoolHomepage ?schoolhomepage ." +
					"<" + identifier + "> foaf:plan ?plan ." +
					"<" + identifier + "> foaf:geekcode ?geekcode ." +
					"<" + identifier + "> foaf:gender ?gender ." +
					"<" + identifier + "> foaf:myersBriggs ?myerbriggs ." +
					"<" + identifier + "> foaf:openid ?openid ." +
				"}";

			store.enqueueQuery(query);
			
			// insert query
			var needsInsert:Boolean = false;
			
			query = 
				"PREFIX foaf: <http://xmlns.com/foaf/0.1/> " +

				"INSERT INTO <" + identityGraph + "> {";
				
			// trim all inputs
			weblogInput.text = InputHelper.trim(weblogInput.text);
			workInfoHomepageInput.text = InputHelper.trim(workInfoHomepageInput.text);
			workplaceHomepageInput.text = InputHelper.trim(workplaceHomepageInput.text);
			schoolHomepageInput.text = InputHelper.trim(schoolHomepageInput.text);
			planInput.text = InputHelper.trim(planInput.text);
			geekcodeInput.text = InputHelper.trim(geekcodeInput.text);
			myersBriggsInput.text = InputHelper.trim(myersBriggsInput.text);
			openIdInput.text = InputHelper.trim(openIdInput.text);

			if(weblogInput.text != "") {
				needsInsert = true;
				query += "<" + identifier + "> foaf:weblog <" + weblogInput.text + "> .";
			}
			if(workInfoHomepageInput.text != "") {
				needsInsert = true;
				query += "<" + identifier + "> foaf:workInfoHomepage <" + workInfoHomepageInput.text + "> .";
			}
			if(workplaceHomepageInput.text != "") {
				needsInsert = true;
				query += "<" + identifier + "> foaf:workplaceHomepage <" + workplaceHomepageInput.text + "> .";
			}
			if(schoolHomepageInput.text != "") {
				needsInsert = true;
				query += "<" + identifier + "> foaf:schoolHomepage <" + schoolHomepageInput.text + "> .";
			}
			if(planInput.text != "") {
				needsInsert = true;
				query += "<" + identifier + "> foaf:plan <" + planInput.text + "> .";
			}
			if(geekcodeInput.text != "") {
				needsInsert = true;
				query += "<" + identifier + "> foaf:geekcode \"" + geekcodeInput.text + "\" .";
			}
			if(myersBriggsInput.text != "") {
				needsInsert = true;
				query += "<" + identifier + "> foaf:myersBriggs \"" + myersBriggsInput.text + "\" .";
			}
			if(openIdInput.text != "") {
				needsInsert = true;
				query += "<" + identifier + "> foaf:openid <" + openIdInput.text + "> .";
			}
			if(genderInput.selectedIndex > 0) {
				needsInsert = true;
				query += "<" + identifier + "> foaf:gender \"" + genderInput.selectedItem.data + "\" .";
			}

			query += "}";

			if(needsInsert) {
				store.enqueueQuery(query);
			}
			store.executeQueries(identityGraph);
		}
		
		private function apiLoadResult(event:Event):void
		{
			store.removeEventListener("result", apiLoadResult);

			var eventResult:Object = store.results[0];
			
			if(eventResult.sparql::results.length() > 0 && eventResult.sparql::results.sparql::result.length() > 0) {
				var result:Object = eventResult.sparql::results.sparql::result;
				if(result.sparql::binding.(@name=="weblog").children().length() > 0) {
					weblogInput.text = result.sparql::binding.(@name=="weblog").children()[0];
				}
				if(result.sparql::binding.(@name=="workinfohomepage").children().length() > 0) {
					workInfoHomepageInput.text = result.sparql::binding.(@name=="workinfohomepage").children()[0];
				}
				if(result.sparql::binding.(@name=="workplacehomepage").children().length() > 0) {
					workplaceHomepageInput.text = result.sparql::binding.(@name=="workplacehomepage").children()[0];
				}
				if(result.sparql::binding.(@name=="schoolhomepage").children().length() > 0) {
					schoolHomepageInput.text = result.sparql::binding.(@name=="schoolhomepage").children()[0];
				}
				if(result.sparql::binding.(@name=="plan").children().length() > 0) {
					planInput.text = result.sparql::binding.(@name=="plan").children()[0];
				}
				if(result.sparql::binding.(@name=="geekcode").children().length() > 0) {
					geekcodeInput.text = result.sparql::binding.(@name=="geekcode").children()[0];
				}
				if(result.sparql::binding.(@name=="myersbriggs").children().length() > 0) {
					myersBriggsInput.text = result.sparql::binding.(@name=="myersbriggs").children()[0];
				}
				if(result.sparql::binding.(@name=="openid").children().length() > 0) {
					openIdInput.text = result.sparql::binding.(@name=="openid").children()[0];
				}
				if(result.sparql::binding.(@name=="gender").children().length() > 0) {
					if(result.sparql::binding.(@name=="gender").children()[0] == "male") {
						genderInput.selectedIndex = 1;
					}
					else if(result.sparql::binding.(@name=="gender").children()[0] == "female") {
						genderInput.selectedIndex = 2;
					}
					else {
						genderInput.selectedIndex = 0;
					}
				}
			}

			reporter.status = "Data loaded.";
			reporter.clearStatusInSeconds(5);
		}
		
		private function apiSaveResult(event:Event):void
		{
			store.removeEventListener("result", apiSaveResult);
			
			reporter.status = "Data saved.";
			reporter.clearStatusInSeconds(5);
		}
		
		private function validateForm():Boolean {		
			var valid:Boolean = true;
			
			// we do not validate this form
			
			return valid;
		}
	]]>
	</mx:Script>

	<mx:FormHeading label="Personal Info"/>
	<mx:FormItem label="Weblog">
		<mx:TextInput id="weblogInput" maxChars="200" width="300"/>
	</mx:FormItem>
	<mx:FormItem label="Work info homepage">
		<mx:TextInput id="workInfoHomepageInput" maxChars="200" width="300"/>
	</mx:FormItem>
	<mx:FormItem label="Workplace homepage">
		<mx:TextInput id="workplaceHomepageInput" maxChars="200" width="300"/>
	</mx:FormItem>
	<mx:FormItem label="School homepage">
		<mx:TextInput id="schoolHomepageInput" maxChars="200" width="300"/>
	</mx:FormItem>
	<mx:FormItem label=".plan file">
		<mx:TextInput id="planInput" maxChars="200" width="300"/>
	</mx:FormItem>
	<mx:FormItem label="Geekcode">
		<mx:TextInput id="geekcodeInput" maxChars="200" width="300"/>
	</mx:FormItem>
	<mx:FormItem label="Gender">
		<mx:ComboBox id="genderInput" selectedIndex="0">
			<mx:ArrayCollection>
         		<mx:Object label="-- please choose --" data=""/>
         		<mx:Object label="male" data="male"/>
         		<mx:Object label="female" data="female"/>
      		</mx:ArrayCollection>
		</mx:ComboBox>
	</mx:FormItem>
	<mx:FormItem label="Myers Briggs (MBTI)">
		<mx:TextInput id="myersBriggsInput" maxChars="200" width="300"/>
	</mx:FormItem>
	<mx:FormItem label="OpenID">
		<mx:TextInput id="openIdInput" maxChars="200" width="300"/>
	</mx:FormItem>
	<mx:FormItem>
		<mx:HRule width="300"/>
		<mx:Button label="Save" click="if(validateForm()) save();"/>
	</mx:FormItem>
	
</mx:Form>
