<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	creationComplete="init()"
	horizontalAlign="center"
	doubleClickEnabled="true"
	doubleClick="browse()">
	
	<mx:Script>
		<![CDATA[	
			import com.adobe.flex.extras.controls.springgraph.Item;
			import mx.controls.Alert;
			import flash.events.Event;
			import mx.binding.utils.ChangeWatcher;
			import mx.binding.utils.BindingUtils;
				
			[Embed(source="../assets/avatar.png")]
            public var avatarCls:Class;
            [Embed(source="../assets/avatar_small.png")]
            public var avatarSmallCls:Class;
            
			/** is this component fully created? */
			private var created:Boolean = false;
			
			private var _data:Item;
			
			override public function set data(d:Object):void 
			{
				super.data = d;
				_data = d as Item;

				// Update the view to reflect the new data. 
				// However, if this component is not yet fully created, then it's not
				// safe to reference our child component properties, so don't do it yet.
				if(created)
					refresh();
			}
			
			private function init():void
			{
				created = true;
				if(_data != null)
					refresh();
					
				// listen to change graph events
				Browser.getInstance().springgraph.addEventListener(Event.CHANGE, refresh);
				// bind change item data
				BindingUtils.bindSetter(refresh, _data, "data");
			}
			
			/**
			 * Update the view with new data.
			 * We dont' use the event variable, sometimes its an event and sometimes an Item object.
			 */
			private function refresh(event:Object = null):void
			{
				// set name
				if(_data.data.property.(@name == "name").length() > 0)
					itemLinkButton.label = _data.data.property.(@name == "name")[0];
				else if(_data.data.property.(@name == "givenname").length() > 0)
					itemLinkButton.label = _data.data.property.(@name == "givenname")[0];
				else if(_data.data.property.(@name == "nick").length() > 0)
					itemLinkButton.label = _data.data.property.(@name == "nick")[0];
				else
					itemLinkButton.label = _data.id;
					
				// set userimage
				if(Browser.getInstance().springgraph.currentItem == _data) {
					itemImage.maxWidth = 100;
					itemImage.maxHeight = 100;
					itemImage.styleName = "userimage";
				}
				else {
					itemImage.maxWidth = 50;
					itemImage.maxHeight = 50;
					itemImage.styleName = "userimagesmall";
				}
				
				if(_data.data.property.(@name == "img").length() > 0)
					itemImage.source = _data.data.property.(@name == "img")[0];
				else if(_data.data.property.(@name == "depiction") > 0)
					itemImage.source = _data.data.property.(@name == "depiction")[0];
				else {
					if(Browser.getInstance().springgraph.currentItem == _data)
						itemImage.source = avatarCls;
					else
						itemImage.source = avatarSmallCls;
				}
				
				// check if data is correctly linked and we have an id
				if(_data.id && _data.id != "" && Browser.getInstance().springgraph.currentItem != _data) {
					itemLinkButton.enabled = true;
					itemLinkButton.useHandCursor = true;
				}
				else {
					itemLinkButton.enabled = false;
					itemLinkButton.useHandCursor = false;
				}
				
				this.validateNow();
			}
			
			private function browse():void
			{
				// check if current item is already this item we want to browse to
				if(Browser.getInstance().springgraph.currentItem == _data)
					return;
				
				// check if data is correctly linked and we have an id
				if(!_data.id || _data.id == "") {
					var alert:Alert = Alert.show("There's no resolveable URI to load this profile.", "Cannot load profile");
					alert.width = 350;
					alert.height = 150;
				}
				else {
					Browser.getInstance().browse(_data.id);
				}
			}
		]]>
	</mx:Script>
	
	<mx:Image id="itemImage" 
		maxWidth="50" maxHeight="50" 
		scaleContent="true" 
		maintainAspectRatio="true" 
		horizontalAlign="center" verticalAlign="middle">
		<mx:filters>
			<mx:DropShadowFilter alpha="0.3" angle="45" distance="3" blurX="5" blurY="5"/>
		</mx:filters>
	</mx:Image>
		
	<mx:LinkButton id="itemLinkButton" width="140" styleName="normalGraphButton" click="browse()"/>
	
</mx:VBox>
